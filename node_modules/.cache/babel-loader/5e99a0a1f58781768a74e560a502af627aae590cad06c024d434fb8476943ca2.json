{"ast":null,"code":"import AddTask from '../views/AddTask.vue';\nimport TaskList from '../views/TaskList.vue';\nexport default {\n  name: \"CombinedView\",\n  components: {\n    AddTask,\n    TaskList\n  },\n  data() {\n    return {\n      tasks: JSON.parse(localStorage.getItem('tasks') || '[]') // Cargar tareas desde localStorage al inicio\n    };\n  },\n  watch: {\n    tasks: {\n      handler(tasks) {\n        localStorage.setItem('tasks', JSON.stringify(tasks)); // Guardar tareas en localStorage cuando cambien\n      },\n      deep: true\n    }\n  },\n  methods: {\n    addTask(newTask) {\n      this.tasks.unshift(newTask); // Añade la nueva tarea al inicio de la lista\n    },\n    toggleCompletion(task) {\n      task.completed = !task.completed;\n    },\n    deleteTask(task) {\n      this.tasks = this.tasks.filter(t => t.id !== task.id);\n    }\n  }\n};","map":{"version":3,"names":["AddTask","TaskList","name","components","data","tasks","JSON","parse","localStorage","getItem","watch","handler","setItem","stringify","deep","methods","addTask","newTask","unshift","toggleCompletion","task","completed","deleteTask","filter","t","id"],"sources":["src/views/CombinedView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h1>Lista de Tareas</h1>\r\n        <AddTask :tasks=\"tasks\" @add-task=\"addTask\" @toggle-completion=\"toggleCompletion\" @delete-task=\"deleteTask\" />\r\n        <TaskList :tasks=\"tasks\" @toggle-completion=\"toggleCompletion\" @delTodo=\"deleteTask\" />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport AddTask from '../views/AddTask.vue';\r\nimport TaskList from '../views/TaskList.vue';\r\n\r\nexport default {\r\n    name: \"CombinedView\",\r\n    components: {\r\n        AddTask,\r\n        TaskList\r\n    },\r\n    data() {\r\n        return {\r\n            tasks: JSON.parse(localStorage.getItem('tasks') || '[]') // Cargar tareas desde localStorage al inicio\r\n        };\r\n    },\r\n    watch: {\r\n        tasks: {\r\n            handler(tasks) {\r\n                localStorage.setItem('tasks', JSON.stringify(tasks)); // Guardar tareas en localStorage cuando cambien\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    methods: {\r\n        addTask(newTask) {\r\n            this.tasks.unshift(newTask); // Añade la nueva tarea al inicio de la lista\r\n        },\r\n        toggleCompletion(task) {\r\n            task.completed = !task.completed;\r\n        },\r\n        deleteTask(task) {\r\n            this.tasks = this.tasks.filter(t => t.id !== task.id);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Aquí puedes agregar estilos personalizados para el componente. */\r\n</style>\r\n"],"mappings":"AASA,OAAAA,OAAA;AACA,OAAAC,QAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH,OAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,KAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EACAC,KAAA;IACAL,KAAA;MACAM,QAAAN,KAAA;QACAG,YAAA,CAAAI,OAAA,UAAAN,IAAA,CAAAO,SAAA,CAAAR,KAAA;MACA;MACAS,IAAA;IACA;EACA;EACAC,OAAA;IACAC,QAAAC,OAAA;MACA,KAAAZ,KAAA,CAAAa,OAAA,CAAAD,OAAA;IACA;IACAE,iBAAAC,IAAA;MACAA,IAAA,CAAAC,SAAA,IAAAD,IAAA,CAAAC,SAAA;IACA;IACAC,WAAAF,IAAA;MACA,KAAAf,KAAA,QAAAA,KAAA,CAAAkB,MAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,EAAA,KAAAL,IAAA,CAAAK,EAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}